[
    {
        "id": 1,
        "imagem": "https://www.adventureclub.com.br/wp-content/uploads/2020/08/barreirinhas-nos-lencois-maranhenses-galeria.jpeg",
        "lugar": "LENCOIS MARANHENSES",
        "cidade": "Barreirinhas",
        "descricao": "> Fonte: <https://www.alura.com.br/artigos/node-js-definicao-caracteristicas-vantagens-usos> \n\n  ### Introdução \n\n Node.JS é uma ferramenta amplamente utilizada no universo de desenvolvimento e todos que atuam na área de tecnologia já ouviram falar, nem que seja nos milhares de anúncios de cursos ou mesmo de vagas. Mas você se pergunta: afinal, o que é Node.js? Para que serve? Como ele atua \n\n \n\n Calma que, antes de olhar para o ambiente Node.JS, precisamos entender um pouco sobre o que é o JavaScript e como ele funciona. Vamos lá! \n\n \n\n ### Node.JS e JavaScript \n\n \n\n JavaScript é uma linguagem de programação que originalmente foi desenvolvida para trazer maior interatividade aos **websites** através da manipulação do *DOM* (Document Object Model). Vamos conferir a definição do livro que é uma referência na temática, o **Eloquent JavaScript** \n\n \n\n > O JavaScript foi introduzido em 1995 como uma forma de adicionar dinamicidade à páginas da web no navegador Netscape Navigator. Desde então, a linguagem foi adotada por todos os outros principais navegadores gráficos da web. Ela tornou possíveis o desenvolvimento das aplicações modernas  da web - aplicações com os quais você pode interagir diretamente sem recarregar a página a cada ação. JavaScript também é usado em sites mais tradicionais para fornecer várias formas de interatividade de forma mais inteligente \n\n  \n\n >Fonte: [Tradução livre do livro Eloquent JavaScript](https://eloquentjavascript.net/00_intro.html) \n\n \n\n Portanto, de forma resumida, podemos entender que o **JavaScript** foi pensado para ser rápido, dinâmico e acessível. A *linguagem interpretada* possibilita subir ou trabalhar em suas aplicações sem precisar  configurar todo um ambiente complexo. \n\n \n\n Essas características motivaram o engenheiro de software Ryan Dahl a desenvolver um ambiente, como um programa que você instala no seu computador, que trabalha com a linguagem JavaScript fora do navegador e pelo lado do servidor, via terminal, de uma maneira menos restritiva \n\n \n\n ### Tudo bem, mas e o Node.JS? \n\n  \n\n O JavaScript nasceu para atender demandas voltadas ao Front e como as necessidades aumentam de acordo com o crescimento tecnológico, surgiu a ideia de utilizar uma mesma linguagem no lado do cliente e do servidor para otimizar processos e serviços. Dessa forma, o Node.JS  aparece como uma alternativa viável para programação Back-End por se tratar de um ambiente para desenvolvimento utilizando a linguagem JavaScript \n\n \n\n De acordo com sua definição oficial, o Node é um **runtime**, que nada mais é do que um conjunto de códigos, API’s, ou seja, são bibliotecas responsáveis pelo tempo de execução (é o que faz o seu programa rodar) que funciona como um interpretador de JavaScript fora do ambiente do **navegador web**. \n\n \n\n É importante frisar que o Node.JS é um ambiente de execução assíncrono, isto é, ele trabalha de modo a não bloquear no momento da execução da aplicação, delegando os processos demorados a um segundo plano. \n\n \n\n Ele dá muito certo  com os servidores de arquitetura **“single threaded”**, isto significa que todos os pedidos para o servidor são executados no mesmo tópico - em vez de serem gerados em processos separados. Um dos grandes diferenciais da parceria Node.JS e Javascript é o bom desempenho no uso de APIs, já que o Javascript faz bastante uso de APIs assíncronas \n\n \n\n Você deve estar se perguntando: “Beleza, já entendi o que é o Node.JS e seu diferencial quando o assunto é o seu uso com o Javascript, mas o que isso significa?” Vamos entender um pouco mais... vem comigo, que te explico.. \n\n \n\n #### Como o Node.JS funciona \n\n \n\n O **Node é capaz de interpretar um código JavaScript**, igual ao que o navegador faz. Sendo assim, quando o navegador recebe um comando em JavaScript, ele o interpreta e depois executa as instruções fornecidas. \n\n \n\n O Node é fantástico (totalmente “sem parcialidade”, aqui pessoal, juro!)  porque torna possível o envio de instruções (os nossos códigos) sem precisar de um navegador ativo, basta ter o Node.JS instalado e utilizar o terminal para executar um programa construído em JavaScript.  \n\n \n\n Além disso, você pode utilizar apenas uma linguagem de programação para tratar requisições entre cliente e servidor. Sensacional, não é? \n\n \n\n Para que todo esse processo seja possível de ocorrer fora do navegador, o Node utiliza uma outra ferramenta chamada de **Chrome's V8 JavaScript Engine.** É esse motor V8 do Chrome que compila e executa o código JavaScript no lugar de apenas interpretá-lo. \n\n \n\n *Ainda parece muito confuso? Vem comigo que te explico melhor… \n\n \n\n O motor V8 da Google é o centro, o coração que processa todo o código JavaScript do navegador para que sua máquina compreenda e disponibilize os recursos e interações. Só é possível visualizar páginas em JavaScript ou trabalhar com um código pelo Node.JS devido ao processamento do motor V8 do Chrome. \n\n \n\n Graças ao núcleo baseado em JavaScript e no motor V8 da Google, o Node.JS possui algumas características que, dependendo do cenário, podem ser consideradas como *benefícios* da plataforma, vamos conferir algumas \n\n \n\n ### Características do Node.Js \n\n \n\n Node.JS pode ser utilizado nas famosas APIS Rest, web scrapping, chatbots, IoT, web servers, aplicações Desktop, tudo devido a sua característica altamente versátil. Dentre as principais, podemos citar \n\n \n\n - **Multiplataforma:** permite criar desde aplicativos desktop, aplicativos móveis e até sites SaaS \n\n - **Multi-paradigma:** é possível programar em diferentes paradigmas, como: Orientado a Objetos, funcional, imperativo e dirigido à eventos",
        "atrativos": "Lagoa Azul - Lagoa Bonita - Passeios de Jipe - Caminhada nas Dunas - Caminhada nas Dunas"
    },
    {
        "id": 2,
        "imagem": "https://www.gov.br/turismo/pt-br/centrais-de-conteudo/14-06-2016-chapada-das-mesas-jpg",
        "lugar": "CHAPADA DAS MESAS",
        "cidade": "Carolina",
        "descricao": "> Fonte: <https://www.alura.com.br/artigos/sprite-como-funciona-em-jogos-2d> \n\n  ## O que é um sprite? \n\n É bem comum em jogos vermos vários personagens, movimento de objetos, mapas desenhados ao fundo e muita coisa acontecendo. Todos estes elementos também são conhecidos como **sprite**. Neste artigo, vamos focar nos sprites 2D e como são feitas as animações. \n\n Um sprite é uma imagem ou um objeto gráfico de duas dimensões em um jogo, que pode ser tanto personagem quanto objetos adicionados em um plano de fundo. Veja a abaixo a imagem de uma cena com uma sprite de um dos maiores jogos 2D de todos os tempos: \n\n Para os personagens, imagine que você queira criar os movimentos deles em seu jogo, como subida de mãos, corrida, pulo, entre outros. Nesse caso, tratamos que o sprite é o personagem e, para todos estes movimentos, devemos montar as variações de sprite. Em resumo, a ideia é desenhar cada movimento como no exemplo mostrado abaixo. O caso é parecido quando queremos construir uma animação em vídeo utilizando uma sequência de desenhos à mão. \n\n  O nome `sprite` ganhou notoriedade no mundo dos games nas décadas de 1970 e 1980, principalmente nos consoles como Atari VCS (1977), ColecoVision (1982), Nintendo Entertainment System (1983) e Sega Genesis (1988).  \n\n #### Sprites nos dias atuais  \n\n À medida que a performance dos computadores foi melhorando com a evolução de hardware e software,  os videogames evoluíram para o 3D, porém o uso de elementos 2D ainda continua sendo muito utilizado e aclamado no mundo dos games.  \n\n Podemos encontrar excelentes jogos 2D nos consoles atuais, com gráficos lindos que possuem vários elementos de design com grande espectro de cores. \n\n Veja alguns deles: \n\n * **Cuphead** é um jogo eletrônico de tiro 2D que lembra muito os jogos de plataforma dos anos 90 porém com seus gráficos extremamente detalhistas e uma ótima jogabilidade. Outra referência a jogos vintage está no sistema de navegação entre fases através de um mapa ao estilo *Super Mario World*. \n\n * **Ori and the Blind Forest** é outro jogo 2D de plataforma com um visual impressionante, com seu personagem destinado a feitos heróicos. \n\n * **Limbo** é mais um ótimo jogo eletrônico de plataforma, embora não se trate de um colorido, como os exemplos anteriores, é um jogo que possui paisagens deslumbrantes, personagens bizarros e sons perturbadores. O jogo acontece em um cenário totalmente escuro e cinzento, pois se trata de um lugar sombrio e cheio de perigos. \n\n ### Conclusão \n\n Um sprite é um personagem ou um objeto dentro dos jogos 2D. Para criar o efeito de movimento, são necessários vários sprites diferentes com pequenas variações do mesmo personagem. Ele teve maior notoriedade nas décadas de 70 e 80 com a chegada dos videogames 2D. Posteriormente, embora o 3D tenha chegado com a evolução dos hardwares e softwares, o sprite 2D continua sendo muito utilizado nos jogos atuais. \n\n Agora que você já sabe um pouco mais sobre o sprite e como ele funciona, que tal recriar 2 jogos clássicos com Javascript? Temos esses dois cursos de programação que vão lhe mostrar como recriar esses jogos do zero: \n\n - [Jogos clássicos parte 1: iniciando no Javascript com jogo do Pong](https://www.alura.com.br/curso-online-pong-javascript) \n\n - [Jogos clássicos parte 2: Aprenda a criar o clássico jogo Freeway](https://www.alura.com.br/curso-online-javascript-listas-lacos) \n\n E você pode participar também da imersão GAME DEV da Alura através do link: \n\n - [Imersão GAME DEV](https://cursos.alura.com.br/imersoes/aulas/aula-1-animacoes-basicas-e-trilha-sonora-c28) \n\n E deixo aqui o meu agradecimento para você que leu até aqui e pôde aprender um pouco mais desse maravilhoso mundo que é a tecnologia. Valeu!",
        "atrativos": "Atrativos de Carolina"
    },
    {
        "id": 3,
        "imagem": "https://oimparcial.com.br/app/uploads/2019/07/0b3a8062e3ddf6364234d846c6ed1782-1024x576.jpg",
        "lugar": "MORROS",
        "cidade": "Cidade de Morros",
        "descricao": "> Fonte: <https://www.alura.com.br/artigos/python-origem-do-nome> \n\n Por que uma das linguagens de programação mais amada no mundo tem esse nome e qual a origem dele? Tem relação com algum tipo de cobra? Descubra isso e muito mais neste artigo! \n\n ### Um pouco de história \n\n [Guido Van Rossum](https://pt.wikipedia.org/wiki/Guido_van_Rossum) criou o [Python](https://www.alura.com.br/cursos-online-programacao/python) em 1989. Ele trabalhava no [Centrum Voor Wiskunde en Informatica](https://www.cwi.nl/) no início dos anos 1980, e seu trabalho era implementar a linguagem de programação conhecida como [ABC](https://pt.wikipedia.org/wiki/ABC_(linguagem_de_programa%C3%A7%C3%A3o)).  \n\n Durante o final dos anos 1980, enquanto ainda estava no CWI, ele começou a procurar por uma linguagem de script que tivesse sintaxe semelhante ao ABC, mas que tivesse acesso às chamadas de sistema do [Amoeba](https://pt.wikipedia.org/wiki/Amoeba_sistema_operacional). Após procurar e não encontrar nenhuma linguagem que atendesse às suas necessidades, Rossum decidiu projetar uma linguagem de script simples que pudesse superar as inadequações do ABC.  \n\n No final da década de 1980, Rossum começou a desenvolver o novo script, e em 1991, lançou a versão de abertura da linguagem de programação. Esta primeira versão tinha um sistema de módulo [Modula-3](https://pt.wikipedia.org/wiki/Modula-3), linguagem que foi posteriormente denominada “Python”. \n\n ### Certo, mas de onde vem esse nome? \n\n Muitas pessoas costumam pensar que o nome Python tem origem em um tipo de cobra, já que o logotipo do Python mostra a imagem de uma cobra azul e amarela. \n\n ![gif do logo da linguagem de programação python](/imagens/gif-1.gif)  \n\n No entanto, a verdadeira história por trás da nomenclatura é um pouco diferente.  \n\n Na década de 1970, a BBC tinha um programa de TV popular do qual van Rossum era um grande fã chamado [Fly Circus de Monty Python](https://pt.wikipedia.org/wiki/Monty_Python%27s_Flying_Circus), ou apenas Monty Python para os íntimos.  \n\n Assim, quando desenvolveu a linguagem, ele pensou que precisava de um nome que fosse curto, único e um pouco misterioso, e por algum motivo que só ele conhecia, decidiu chamar o projeto de ‘Python’. \n\n ![homem saindo de uma loja](/imagens/gif-2.gif) \n\n E se você fosse criar sua própria linguagem de programação, qual nome daria? Faria uma homenagem a sua série, jogo ou filme favorito? \n\n No nosso [curso de python](https://www.alura.com.br/cursos-online-programacao/python), que é uma formação completa, entramos também em outras curiosidades da linguagem e sua história, pois a comunidade é muito forte e toma decisões importantes. \n\n ### Conclusão \n\n Atualmente, [o Python é uma tendência mundial no mundo das pessoas que desenvolvem](https://blog.revelo.com.br/desenvolvedores-python-estao-em-alta-no-mercado/), já que pode ser aplicado em diferentes cenários, como: Data Science, aplicações web, desenvolvimento Back-End, criação de jogos e scripts. \n\n Quer aprender mais sobre Python? Veja: \n\n - [Python do zero - Formação na linguagem mais querida do momento](https://www.alura.com.br/formacao-Python-linguagem) \n\n - [Python para Web - Formação Django](https://www.alura.com.br/formacao-django) \n\n - [API com Python - Curso Django Rest Framework](https://www.alura.com.br/curso-online-api-django-3-rest-framework) \n\n - [TDD com Python - Desenvolvimento guiado por testes](https://cursos.alura.com.br/course/tdd-django-3-testes) \n\n - [Pacman com Python - Criando um jogo com Pygame](https://www.alura.com.br/curso-online-python-pygame-pacman-colisao-pontuacao) \n\n ",
        "atrativos": "Atrativos de cidade de morros"
    }
]